/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.3/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.10'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

//apply 

dependencies {
    implementation "org.jdbi:jdbi3-bom:3.29.0"
    implementation "org.jdbi:jdbi3-core:3.29.0"
    implementation "org.jdbi:jdbi3-sqlobject:3.29.0"
    implementation group: 'org.springframework.security', name: 'spring-security-crypto', version: '5.7.1'
    implementation  group: 'commons-logging', name: 'commons-logging', version: '1.2'

    implementation files("D:\\project\\Java\\postgresql-42.3.5.jar")
    
    testImplementation "org.testfx:testfx-core:4.0.16-alpha"
    testImplementation "junit:junit:4.13-beta-3"
    testImplementation "org.testfx:testfx-junit:4.0.15-alpha"
    
    testImplementation group: 'org.hamcrest', name: 'hamcrest', version: '2.1'

    implementation 'com.google.guava:guava:30.1.1-jre'

}

application {
    // Define the main class for the application.
    mainClass = 'typing.Main'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

javafx {
    version = "11.0.2"
    modules = ['javafx.controls','javafx.fxml']
}
